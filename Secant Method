def secant_method(func, x0, x1, tol=1e-6, max_iter=100):
    for i in range(max_iter):
        f_x0 = func(x0)
        f_x1 = func(x1)

        if abs(f_x1 - f_x0) < 1e-12:
            raise ValueError("Denominator too small, potential division by zero.")

        x2 = x1 - f_x1 * (x1 - x0) / (f_x1 - f_x0)

        if abs(x2 - x1) < tol:
            print(f"Converged in {i + 1} iterations.")
            return x2

        x0, x1 = x1, x2

    raise ValueError("Method did not converge within the maximum number of iterations.")

def f(x):
    return x ** 2 - 4

root = secant_method(f, 3, 2.5)
print(f"Approximate root: {root:.6f}")
